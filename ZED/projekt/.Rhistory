?dir.create
dir.create("testdir2", "testdir3", recursive=TRUE)
dir.create(file.path("testdir2", "testdir3"), recursive=TRUE)
?unlink
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink('testdir/')
unlink('testdir/', recursive = TRUE)
unlink('testdir', recursive = TRUE)
1:20
pi:10
15:1
?`:`
sqe(1, 20)
seq(1, 20)
seq(1, 20, by=0.5)
seq(0, 10, by=0.5)
seq(5, 10, length=30)
my_seq = seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect = c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("Mam", "na", "imię")
my_char
paste(my_char, collapse = " ")
c(my_char, "Twoje imię")
my_name <- c(my_char, "Twoje imię")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,  c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo","bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vect <- 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(mmy_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Domarad", "Lubomira", "Drogostan", "Uniegosta")
cbind(patients, my_matrix)
my_data <-   data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("pacjent", "wiek", "waga", "MCV", "MCH", "MCHC")
colnames(my_data) <- cnames
my_data
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE,   FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
isTrue(6 > 5)
isTRUE(6 > 4)
identical('foo', 'foo')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0 )
swirl()
library(swirl.pl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c('Domarad', 'Lubomira', 'Drogostan', 'Uniegosta')
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("pacjent", "wiek", "waga", "MCV", "MCH", "MCHC")
colnames(my_data, cnames)
colnames(my_data) <- cnames
my_data
getwd()
ls()
mj <- 23
ls
ls()
dir()
?list.files
args(list.files())
args(list.files
)
old.dir <- getwd()
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
dir()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R', 'mytest2.R')
file.copy('mytest2.R', 'mytest3.R')
file.path('mytest3.R')
file.path('folder1', 'folder2')
dir.create(file.path('folder1', 'folder2'), recursive=True)
dir.create(file.path('folder1', 'folder2'), recursive=TRUE)
dir.create('folder1', 'folder2', recursive=TRUE)
?dir.create
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink(file.path('testdir2'), recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
clr
clc
cls
x <- c("a", "b", "c", "c", "d", "a")
x <- c("a", "b", "c", "c", "d", "a")
x[1]
x[0]
x[length(x)]
x[-2, -4]
x[c(-2, -4)]
df <- data.frame(Titanic)
df
view(df)
df[df$Survived, ]
df[df$Survived = 'Yes', ]
df[df$Survived == 'Yes', ]
df[df$Survived == 'Yes' | df$Class == '1st', ]
1:5:2
1:5:1
library(swirl.pl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('Moja pierwsza funkcja!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[[1]]}, c(8, 4, 0))
evaluate(function(x){x[[length(x)]]}, c(8, 4, 0))
?paste
paste("R", "jest", "gites!")
submit()
telegram("ala", "to", "boli")
submit()
mad_libs(place="place", adjective="a", noun="n")
submit()
'Ja' %p% 'uwielbiam' %p% 'Cię!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lappy(flag_colors, sum
)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, sum)
tapply(flags$landmass, flags$animate, mean)
tapply(flags$population, flags$red, summary)
flags$population
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(pplants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
?table
str(plants)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXct(Sys.time())
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
montths(t1)
months(t1)
quarters(t2)
t3 <- "listopad 17 1986 08:24"
t3 <- "listopad 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?sample
sample(1:6, 4, replace=True)
sample(1:6, 4, replace=T)
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:6, 4)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0, 1), 100, prob = c(0.3, 0.7))
sample(c(0, 1), 100, prob = c(0.3, 0.7), replace=TRUE)
sample(c(0, 1), 100,  replace=TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0, 1), 100,  replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnornm(10)
rnorm(10)
rnorm(10, mean=100, sd= 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
?data.frame
data.frame(x = 1, y = 1:10)
df <- data.frame(plec=c('M', 'M', 'M', 'K', "K', 'K'),
wiek=rnorm(6, mean=25, sd=5), waga=rnorm(6, mean=80, sd=10))
)
/
\
sa
asf
af
df <- data.frame(plec=c('M', 'M', 'M', 'K', "K', 'K'), wiek=rnorm(6, mean=25, sd=5), waga=rnorm(6, mean=80, sd=10))
v = c(1, 2)
is.NA(v)
is.na(v)
df <- data.frame(plec=c('M', 'M', 'M', 'K', "K', 'K'), wiek=rnorm(6, mean=25, sd=5), waga=rnorm(6, mean=80, sd=10)))
)
)
/
df <- data.frame((plec=c('M', 'M', 'M', 'K', "K', 'K'))
x <- 10
data.frame(x = 1, y = 1:10, fac = fac)
data.frame(x = 1, y = 1:10)
data.frame(plec=c(1, 2, 3))
data.frame(plec=c('M', 'M', 'M', 'K', 'K', 'K'))
?read.table
read.table('PortretPoznania2002-2014.csv')
read.table(file = 'PortretPoznania2002-2014.csv')
read.xlsx
read.csv('PortretPoznania2002-2014.csv')
table <- read.csv('PortretPoznania2002-2014.csv')
View(table)
View(table)
View(table)
View(table)
?read.csv
table <- read.csv('PortretPoznania2002-2014.csv', skip = 9)
table <- read.csv('PortretPoznania2002-2014.csv', skip = 0)
table <- read.csv('PortretPoznania2002-2014.csv', skip = 9)
sapply(table$X, function(grepl(x, "lat"))
?grepl
table <- read.csv('PortretPoznania2002-2014.csv', skip = 10, nrows=16)
table <- read.csv('PortretPoznania2002-2014.csv', skip = 10, nrows=14)
table <- read.csv('PortretPoznania2002-2014.csv', skip = 10, nrows=15)
class(table)
tabl2 <- table[, 2:13]
tabl2
tabl2 <- table[, -2]
tabl2
View(table)
View(tabl2)
View(tabl2)
?data.frame
tabl2$X.1
names(tabl2) <- c("wiek","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014")
hist(tabl2$2002)
histogram(tabl2$2002)
hist(tabl2$`2002`)
hist
barplot(tabl2$`2002`)
?barplot
barplot(tabl2$`2002`, names.arg = table2$wiek)
barplot(tabl2$`2002`, names.arg = tabl2$wiek)
barplot(tabl2$`2002`, names.arg = tabl2$wiek, angle = 90)
barplot(tabl2$`2002`, names.arg = tabl2$wiek, angle = -90)
?barplot
barplot(tabl2$`2002`, names.arg = tabl2$wiek, angle = 135)
?barplot
barplot(tabl2$`2002`, names.arg = tabl2$wiek,  las = 2)
bp <- barplot(tabl2$`2002`, names.arg = tabl2$wiek,  las = 2)
library(swirl.pl)
install_from_swirl("Przetwarzanie_danych")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
wpisz packageVersion("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm('mydf')
cran
?select
select(cran, ip_id,
|  package, country)
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
filter(cran, r_version =< "3.0.2", country == "IN")
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os = "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
filter(cran, r_version != NA)
filter(cran, r_version != na)
filter(cran, !is.na(r_version))
cen2 <- arrange(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, desc(package), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
s
select(cran)
cran3 <- select(cran, ip_id, package, size)
ccran
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^20)
mutate(cran3, size_gb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran3)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df("mydf")
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
View(cran)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count)
)
View(top_counts_sorted)
pomocą quantile(pack_sum$unique, probs = 0.99)
\quantile(pack_sum$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
?mkdir
mkdir("projekt")
dir.create("projekt")
setwd("projekt")
orig_data_csv <- read.delim2("wuhan_blood_sample_data_Jan_Feb_2020.xlsx")
View(orig_data_csv)
View(orig_data_csv)
?read.table
orig_data_csv <- read.delim2("wuhan_blood_sample_data_Jan_Feb_2020.xlsx", na.strings = '\t')
orig_data_csv <- read.delim2("wuhan_blood_sample_data_Jan_Feb_2020.xlsx", na.strings = ' ')
orig_data_csv <- read.table("wuhan_blood_sample_data_Jan_Feb_2020.xlsx", sep = "\t", header=TRUE)
orig_data_csv <- read.table("wuhan_blood_sample_data_Jan_Feb_2020.xlsx", sep = "\t", header=TRUE, na.strings = ' ')
orig_data_csv <- read.table("wuhan_blood_sample_data_Jan_Feb_2020.xlsx", sep = "\t", header=TRUE, na.strings = ' ', encoding = 'UTF-8')
